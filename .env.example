# =================================================================
# CF Clearance Scraper 统一配置文件
# =================================================================

# =================================================================
# 服务基础配置
# =================================================================

# 服务端口
PORT=3000

# 认证令牌 (可选，设置后所有API请求需要提供authToken)
# AUTH_TOKEN=your_secret_token

# 请求超时时间 (毫秒) - hCaptcha需要更长时间
TIMEOUT=300000

# 内存管理配置
MEMORY_CLEANUP_INTERVAL=300000
MAX_MEMORY_USAGE=2048

# 最大并发请求数
MAX_CONCURRENT_REQUESTS=100

# 浏览器实例限制
BROWSER_LIMIT=25

# =================================================================
# hCaptcha 配置
# =================================================================

# Google Gemini API Keys (必需) - 支持多个API密钥以提高并发处理能力
# 获取地址: https://aistudio.google.com/app/apikey
# 可以配置多个API密钥，用逗号分隔，系统会随机选择使用
GEMINI_API_KEY=key1
# GEMINI_API_KEYS=key1,key2,key3  # 多个密钥配置（如果设置了此项，会覆盖单个GEMINI_API_KEY）

# AI模型配置 - 使用免费的Gemini 2.0 Flash模型
IMAGE_CLASSIFIER_MODEL=gemini-2.0-flash
SPATIAL_POINT_REASONER_MODEL=gemini-2.0-flash
SPATIAL_PATH_REASONER_MODEL=gemini-2.0-flash
CHALLENGE_CLASSIFIER_MODEL=gemini-2.0-flash

# hCaptcha解决器超时配置 (毫秒)
HCAPTCHA_SOLVER_TIMEOUT=300000
HCAPTCHA_PAGE_TIMEOUT=30000

# hCaptcha其他选项
DISABLE_BEZIER_TRAJECTORY=false

# =================================================================
# 日志配置
# =================================================================

# 全局日志级别
LOG_LEVEL=CRITICAL

# Python日志配置 (CRITICAL = 禁用大部分输出)
PYTHON_LOG_LEVEL=CRITICAL


# =================================================================
# 监控配置
# =================================================================

# 内存监控间隔 (毫秒)
MEMORY_MONITOR_INTERVAL=30000

# 保留的最近token数量
MAX_RECENT_TOKENS=50

# 保留的请求历史数量
MAX_REQUEST_HISTORY=100

# =================================================================
# 代理配置 (可选)
# =================================================================

# HTTP代理设置
# HTTP_PROXY=http://proxy.example.com:8080
# HTTPS_PROXY=https://proxy.example.com:8080
# NO_PROXY=localhost,127.0.0.1,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16

# =================================================================
# 开发/调试配置
# =================================================================

# 环境模式 (development, production, test)
NODE_ENV=production

# 跳过浏览器启动 (用于测试)
SKIP_LAUNCH=false

# =================================================================
# Docker配置 (用于容器化部署)
# =================================================================

# 显示设置 (Docker环境)
# DISPLAY=:99

# =================================================================
# 配置说明
# =================================================================

# 1. 端口配置: 修改PORT可改变服务监听端口
# 2. API密钥: GEMINI_API_KEY是必需的，需要从Google AI Studio获取
#    - 单个密钥: 设置GEMINI_API_KEY=your_key
#    - 多个密钥: 设置GEMINI_API_KEYS=key1,key2,key3 (用逗号分隔，提高并发处理能力)
# 3. 性能调优: 调整TIMEOUT、MAX_MEMORY_USAGE、BROWSER_LIMIT以适应服务器性能
# 4. 安全设置: 设置AUTH_TOKEN启用API认证
# 5. 模型选择: 默认使用免费的gemini-2.0-flash模型，避免配额限制
# 6. 日志控制: LOG_LEVEL=CRITICAL可减少输出，提高性能
# 7. 监控配置: 调整MAX_RECENT_TOKENS和MAX_REQUEST_HISTORY控制内存使用

# =================================================================
# 快速配置模板
# =================================================================

# 开发环境 (低并发，详细日志):
# BROWSER_LIMIT=10
# LOG_LEVEL=INFO
# NODE_ENV=development

# 生产环境 (高并发，最小日志):
# BROWSER_LIMIT=25
# LOG_LEVEL=CRITICAL
# NODE_ENV=production

# 轻量环境 (极低并发，节省资源):
# BROWSER_LIMIT=5
# MAX_MEMORY_USAGE=256
# MAX_CONCURRENT_REQUESTS=20

# 高并发hCaptcha环境 (多API密钥配置示例):
# GEMINI_API_KEYS=AIzaSyXXXXXXXXXXXXXXXXXX,AIzaSyYYYYYYYYYYYYYYYYYY,AIzaSyZZZZZZZZZZZZZZZZZZ
# BROWSER_LIMIT=50
# MAX_CONCURRENT_REQUESTS=200